# 测试
label=order-test
# 应用名
spring.application.name=order
# 启动端口
server.port=9001

# 注册中心
eureka.instance.hostname=registry
eureka.client.service-url.defaultZone=http://${eureka.instance.hostname}:8761/eureka/
eureka.instance.prefer-ip-address=true

# 数据源
spring.datasource.url=jdbc:mysql://192.168.0.147:3306/homelike?Unicode=true&amp;characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# jap
spring.jpa.show-sql=true

# rabbitmq 相关配置
spring.rabbitmq.host=192.168.0.147
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

# order开启服务熔断机制
feign.hystrix.enabled=true
# 熔断机制服务超时时间
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=3000
# 设置断路器可用
hystrix.command.default.circuitBreaker.enabled=true
# 最小请求数
hystrix.command.default.circuitBreaker.requestVolumeThreshold=10
# 断路器在open状态10秒后进入half open状态，允许requestVolumeThreshold的请求，正常closed熔断，否则进入open
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=10000
# 开启、关闭熔断的错误率  60%
hystrix.command.default.circuitBreaker.errorThresholdPercentage=60
# 指定 listByProductIds 方法的超时时间
hystrix.command.listByProductIds.execution.isolation.thread.timeoutInMilliseconds=3000

# 链路追踪zipkin地址
spring.zipkin.base-url=http://192.168.0.147:9411
# 将所有的请求发送到zipkin - 开发环境，生成环境用模式的0.1即可
spring.sleuth.sampler.percentage=1

# 设置链路追踪相互日志级别
logging.level.org.springframework.cloud.netflix.feign=debug

# myMessage 消息队列分组
spring.cloud.stream.bindings.myMessage.group=order
# rabbitmq中存储对象为json格式字符串
spring.cloud.stream.bindings.myMessage.contentType=application/json